<Window x:Class="Stocktaking.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Stocktaking"
        WindowStartupLocation="CenterScreen"
        ResizeMode="NoResize" SnapsToDevicePixels="True"
        xmlns:Toggle="clr-namespace:CommonWindows.ToggleSwitch;assembly=CommonWindows"
        xmlns:viewmodel="clr-namespace:Stocktaking.ViewModel;assembly=Stocktaking" 
        d:DataContext="{d:DesignInstance Type=viewmodel:StocktakingVM}"
        mc:Ignorable="d" FlowDirection="RightToLeft"
        Title="Stocktaking" Height="750" Width="1200" 
        Style="{DynamicResource WindowBackground}">

    <Window.Resources>

        <Style TargetType="{x:Type TextBlock}" x:Key="LargeHeader">
            <Setter Property="FontSize" Value="36"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type TextBox}" x:Key="LargeText">
            <Setter Property="FontSize" Value="36"/>
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <Style TargetType="{x:Type Window}" x:Key="WindowBackground">
            <Setter Property="Background" Value="{Binding ElementName=Light, Path=OffColor}"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=Light, Path=IsChecked}" Value="False">
                    <Setter Property="Background" Value="{Binding ElementName=Light, Path=OnColor}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="0.30*"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="331*"/>
            <ColumnDefinition Width="582*"/>
            <ColumnDefinition Width="81*"/>
        </Grid.ColumnDefinitions>

        <!--Upper window - Mode selector-->
        <Border
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            BorderThickness="0 0 0 1">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="BorderBrush">
                        <Setter.Value>
                            <LinearGradientBrush StartPoint="0 0" EndPoint="1 0">
                                <GradientStop Color="Transparent" Offset="0"/>
                                <GradientStop Color="Black" Offset="0.15"/>
                                <GradientStop Color="Black" Offset="0.85"/>
                                <GradientStop Color="Transparent" Offset="1"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=Light, Path=IsChecked}" Value="False">
                            <Setter Property="BorderBrush">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0 0" EndPoint="1 0">
                                        <GradientStop Color="Transparent" Offset="0"/>
                                        <GradientStop Color="White" Offset="0.15"/>
                                        <GradientStop Color="White" Offset="0.85"/>
                                        <GradientStop Color="Transparent" Offset="1"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <!--Stocktaking mode text-->
                <TextBlock
                    Grid.Column="0"
                    FontWeight="UltraBlack"
                    Text="מצב ספירת מלאי"
                    x:Name="StocktakingMode">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock" BasedOn="{StaticResource LargeHeader}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=Light, Path=IsChecked}" Value="False">
                                    <Setter Property="Foreground" Value="{Binding ElementName=Light, Path=OffColor}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=Mode, Path=IsChecked}" Value="False">
                                    <Setter Property="Foreground" Value="{Binding ElementName=Mode, Path=OffColor}"/>
                                    <Setter Property="TextDecorations" Value="Underline"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!--Mode switch selector-->
                <Toggle:ToggleSwitch
                    Grid.Column="1"
                    x:Name="Mode"
                    OnColor="{StaticResource ShowModeBrush}" 
                    OffColor="{StaticResource StocktakingModeBrush}"
                    SwitchHeight="50"
                    IsChecked="{Binding ShowMode}"
                    FlowDirection="LeftToRight"
                    SwitchWidth="200">
                    <Toggle:ToggleSwitch.Style>
                        <Style TargetType="{x:Type Toggle:ToggleSwitch}">
                            <Setter Property="ToggleColor" Value="{Binding ElementName=Light, Path=OffColor}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=Light, Path=IsChecked}" Value="False">
                                    <Setter Property="ToggleColor" Value="{Binding ElementName=Light, Path=OnColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Toggle:ToggleSwitch.Style>
                </Toggle:ToggleSwitch>

                <!--Show mode text-->
                <TextBlock
                    Grid.Column="2"
                    FontWeight="UltraBlack"
                    Text="מצב תצוגה"
                    x:Name="ShowMode">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource LargeHeader}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=Light, Path=IsChecked}" Value="False">
                                    <Setter Property="Foreground" Value="{Binding ElementName=Light, Path=OffColor}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ElementName=Mode, Path=IsChecked}" Value="True">
                                    <Setter Property="Foreground" Value="{Binding ElementName=Mode, Path=OnColor}"/>
                                    <Setter Property="TextDecorations" Value="Underline"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Grid>
        </Border>

        <!--Right window panel - Light and Barcode-->
        <StackPanel
            Grid.Row="1"
            Grid.Column="0"
            VerticalAlignment="Center" Margin="0,43">

            <!--Light mode title text-->
            <TextBlock 
                Text="תאורה"
                FontSize="24">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource LargeHeader}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=Light, Path=IsChecked}" Value="False">
                                <Setter Property="Foreground" Value="{Binding ElementName=Light, Path=OffColor}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <!--Light mode switch-->
            <Toggle:ToggleSwitch
                Margin="0 10 0 0"
                x:Name="Light"
                OnColor="{StaticResource DeepGreyBrush}" 
                OffColor="{StaticResource FrostedWhiteBrush}"
                SwitchHeight="30"
                FlowDirection="LeftToRight"
                IsChecked="{Binding LightCheckState}"
                SwitchWidth="70">
                <Toggle:ToggleSwitch.Style>
                    <Style TargetType="{x:Type Toggle:ToggleSwitch}">
                        <Setter Property="ToggleColor" Value="{Binding ElementName=Light, Path=OffColor}"/>
                        <Style.Triggers>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter Property="ToggleColor" Value="{Binding ElementName=Light, Path=OnColor}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Toggle:ToggleSwitch.Style>
            </Toggle:ToggleSwitch>

            <!--Barcode stack panel-->
            <StackPanel
                Margin="0 25"
                DockPanel.Dock="Bottom"
                VerticalAlignment="Center">

                <!--Barcode title text-->
                <TextBlock
                    Text="ברקוד מגש/עגלה"
                    Padding="10">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource LargeHeader}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=Light, Path=IsChecked}" Value="False">
                                    <Setter Property="Foreground" Value="{Binding ElementName=Light, Path=OffColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!--Barcode two way textbox-->
                <TextBox
                    Padding="10"
                    MaxLines="1"
                    MinWidth="200"
                    ForceCursor="True"
                    TextWrapping="Wrap"
                    TextAlignment="Center"
                    Text="{Binding Barcode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource LargeText}">
                            <Setter Property="Background" Value="{Binding ElementName=Light, Path=OffColor}"/>
                            <Setter Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect
                                        BlurRadius="5"
                                        ShadowDepth="0"
                                        Opacity="0"
                                        Color="{Binding ElementName=Light, Path=OnColor}"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TextBox}">
                                        <Border
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="5"
                                            SnapsToDevicePixels="True">
                                            <ScrollViewer 
                                                x:Name="PART_ContentHost" 
                                                Focusable="false"
                                                HorizontalScrollBarVisibility="Hidden" 
                                                VerticalScrollBarVisibility="Hidden"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsFocused" Value="True">
                                                <Setter Property="BorderBrush">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0 0" EndPoint="1 1">
                                                            <GradientStop Color="#FEAC5E" Offset="0"/>
                                                            <GradientStop Color="#C779D0" Offset="0.5"/>
                                                            <GradientStop Color="#4BC0C8" Offset="1"/>
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation
                                                                To="1"
                                                                Storyboard.TargetProperty="(Effect).Opacity"
                                                                Duration="0:0:0.2"/>
                                                            <ThicknessAnimation
                                                                To="2"
                                                                Storyboard.TargetProperty="BorderThickness"
                                                                Duration="0:0:0.1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.EnterActions>
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation 
                                                                To="0"
                                                                Storyboard.TargetProperty="(Effect).Opacity"
                                                                Duration="0:0:0.2"/>
                                                            <ThicknessAnimation
                                                                To="1"
                                                                Storyboard.TargetProperty="BorderThickness"
                                                                Duration="0:0:0.1"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </Trigger.ExitActions>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=Light, Path=IsChecked}" Value="False">
                                    <Setter Property="Background" Value="{Binding ElementName=Light, Path=OnColor}"/>
                                    <Setter Property="Foreground" Value="{Binding ElementName=Light, Path=OffColor}"/>
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect
                                                BlurRadius="5"
                                                ShadowDepth="0"
                                                Opacity="0"
                                                Color="{StaticResource FrostedWhite}"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </StackPanel>
        </StackPanel>

        <!--Left window panel - Battery counter-->
        <StackPanel
            Grid.Row="1"
            Grid.Column="1" 
            Grid.ColumnSpan="2">

            <!--Battery counter title text-->
            <TextBlock
                Text="מספר תאים במגש">
                <TextBlock.Style>
                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource LargeHeader}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=Light, Path=IsChecked}" Value="False">
                                <Setter Property="Foreground" Value="{Binding ElementName=Light, Path=OffColor}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>

            <!--Battery counter text border-->
            <Border
                Margin="20"
                BorderThickness="5"
                CornerRadius="10">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                                    <GradientStop Color="{Binding ElementName=Light, Path=OffColor}" Offset="0"/>
                                    <GradientStop Color="{StaticResource VeryLightGrey}" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="BorderBrush">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                                    <GradientStop Color="{StaticResource LightGrey}" Offset="0"/>
                                    <GradientStop Color="{StaticResource DeepGrey}" Offset="1"/>
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=Light, Path=IsChecked}" Value="False">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <LinearGradientBrush StartPoint="0 0" EndPoint="0 1">
                                            <GradientStop Color="{StaticResource Grey}" Offset="0"/>
                                            <GradientStop Color="{StaticResource DarkGrey}" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <!--Battery counter text-->
                <TextBlock
                    FontSize="380"
                    Text="{Binding BatteryNumber, NotifyOnTargetUpdated=True}"
                    TextAlignment="Center">
                    <TextBlock.Triggers>
                        <EventTrigger RoutedEvent="Binding.TargetUpdated">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation 
                                        Duration="0:0:0.15"
                                        To="1"
                                        From="0"
                                        Storyboard.TargetProperty="Opacity"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </TextBlock.Triggers>
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource LargeHeader}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=Light, Path=IsChecked}" Value="False">
                                    <Setter Property="Foreground" Value="{Binding ElementName=Light, Path=OffColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </Border>
        </StackPanel>
    </Grid>
</Window>
